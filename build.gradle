buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // MixinGradle:
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
// MixinGradle:
apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = maven_group
archivesBaseName = archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.
    
    runs {
        client {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            
            property 'forge.enabledGameTestNamespaces', 'audioplayer'

            mods {
                audioplayer {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'audioplayer'

            mods {
                audioplayer {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'audioplayer'

            mods {
                audioplayer {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'audioplayer', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                audioplayer {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://maven.maxhenkel.de/repository/public' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.7'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("de.maxhenkel.voicechat:voicechat-api:${voicechat_api_version}")

    implementation("com.googlecode.soundlibs:mp3spi:${mp3spi_version}") {
        exclude group: 'junit', module: 'junit'
    }

    shadow("com.googlecode.soundlibs:mp3spi:${mp3spi_version}") {
        exclude group: 'junit', module: 'junit'
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "audioplayer",
                "Specification-Vendor"    : "audioplayersareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "audioplayersareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs": "audioplayer.mixins.json"
        ])
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier 'shadow-dev'
    relocate 'de.maxhenkel.configbuilder', "de.maxhenkel.${mod_id}.configbuilder"
    relocate 'javazoom', "de.maxhenkel.${mod_id}.javazoom"
    relocate 'org.tritonus', "de.maxhenkel.${mod_id}.tritonus"
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
